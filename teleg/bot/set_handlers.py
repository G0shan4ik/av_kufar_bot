from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram import F
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold, hlink

from .core import router, dp, admin_id
from .commands import set_commands
from .states import AddState
from .keyboard import cancel_kb, start_kb, delete_kb
from .helpers import get_links


@dp.message(CommandStart())
async def start_cmd(message: Message):
    user_id = message.from_user.id
    await set_commands()
    await message.answer(f'{hbold("–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫")} {hbold(" -ADMIN-") if user_id == admin_id else ""}', reply_markup=start_kb(user_id))
    await message.answer(f'{"‚úåüèø" if user_id == admin_id else "‚úã"}')
    await message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É: "–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É.", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å–≤–µ–∂–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ')


@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É.")
async def add_link(message: Message, state: FSMContext):
    await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞–≤–∞—Ç—å —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ.\n'
                         '(–ù–∞—à –±–æ—Ç –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ —Å Kufar.by –∏ Av.by)',
                         reply_markup=cancel_kb()
                         )
    await state.set_state(AddState.add_id)


@router.message(Command(commands=['all_links']))
async def get_all_links(message: Message, state: FSMContext):
    all_links = get_links(message.chat.id)
    send_text = '–í–æ—Ç –≤—Å–µ –≤–∞—à–∏ —Å—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ : \n\n—Å–∞–π—Ç\n–≤–∞—à–∞ —Å—Å—ã–ª–∫–∞'
    if len(all_links) == 0:
        send_text = '–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫(\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É - "–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É."'

    await message.answer(
        text=send_text,
        reply_markup=start_kb(message.from_user.id),
    )
    for item in all_links:
        st_name = 'Av.by' if item[1] == 'av' else 'Kufar.by'
        link = hlink(item[-1], item[-1])
        await message.answer(
            text=f'{st_name}\n\n{link}',
            disable_web_page_preview=True,
            reply_markup=delete_kb(item[0])
        )


@router.message(Command(commands=['help']))
async def delete_link(message: Message, state: FSMContext):
    await message.answer(
        text=f'–ö–æ–º–∞–Ω–¥–∞ /start - {hbold("–∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞.")}\n'
             f'–ö–æ–º–∞–Ω–¥–∞ /all_links - {hbold("–≤—ã–≤–µ–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.")}\n'
             f'''–ß—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É - "{hbold('–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É.')}"\n''',
        reply_markup=start_kb(message.from_user.id)
    )
