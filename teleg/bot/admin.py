from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from .core import router_admin
from .keyboard import admin_kb, start_kb, cancel_kb
from teleg.parser.pars_data import first_pars

import os
from aiogram import F
from aiogram.fsm.state import StatesGroup, State


class AddUser(StatesGroup):
    add = State()
    add_car = State()
    add_obj = State()



ADMIN_ID = int(os.getenv('ADMIN_ID'))


@router_admin.message(F.text == '–û—Ç–º–µ–Ω–∞')  # exit the state
async def exit_the_state(message: Message, state: FSMContext):
    await message.answer(
        text='–í—ã –≤—É—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
        reply_markup=start_kb(message.from_user.id)
    )
    await state.clear()


@router_admin.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —é–∑–µ—Ä–∞üë®‚Äçüë©‚Äç‚Äçüë¶")
async def add_link(message: Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        await message.answer('–ö–∞–∫—É—é —Å—Å—ã–ª–∫—É —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', reply_markup=admin_kb())
        await state.set_state(AddUser.add)


@router_admin.message(AddUser.add, F.text == '–°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ.' or F.text == '–°—Å—ã–ª–∫–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞.')
async def send_link(message: Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É...', reply_markup=cancel_kb())
        if message.text == '–°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ.':
            await state.set_state(AddUser.add_car)
        elif message.text == '–°—Å—ã–ª–∫–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞.':
            await state.set_state(AddUser.add_obj)

@router_admin.message(AddUser.add_car, F.text)
async def add_link_car(message: Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        user_id, url = message.text.split()
        site_name = 'kufar'
        if 'cars.av.by' in url:
            site_name = 'av'
        await first_pars(url, int(user_id), site_name, admin=True)
        await message.answer('–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

        await state.clear()


@router_admin.message(AddUser.add_obj, F.text)
async def add_link_obj(message: Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        user_id, url = message.text.split()

        await first_pars(url, int(user_id), 'kufar', admin=True, obj=True)
        await message.answer('–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

        await state.clear()